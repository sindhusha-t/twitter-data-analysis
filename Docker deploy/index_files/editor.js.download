var Editor=function(){var UPDATE_EDITOR_TEXT="update-editor-text-event";var editor;var scheduled_execute;var backoff_execute_delay=300;var new_line;var id;var element;this.init=function(_element,_id,settings,loadDefaultText){if(loadDefaultText===undefined)loadDefaultText=true;element=_element;id=_id;var filename=$("#"+_id).attr("data-filename");configure_ide(filename,settings,loadDefaultText);setTimeout(function(){hook_up_events(filename);var bind_console=new CustomEvent("bind-console-event",{});document.dispatchEvent(bind_console)},300);loadReferencedDocument()};this.append_code=function(code){if(code==="")return;var parsed_html=$.parseHTML(code)[0];var html_with_linebreaks=parsed_html.textContent.replace(/\\n/g,new_line);editor.setValue(get_code()+"\n"+html_with_linebreaks+"\n");var last_line=1e5;editor.resize(true);editor.scrollToLine(last_line,true,true,function(){});editor.gotoLine(last_line,10,true);editor.clearSelection()};var set_code=this.set_code=function(code,execFile){if(code==="")return;editor.setValue(code);editor.clearSelection();if(execFile!==false)execute()};var get_code=this.get_code=function(){return editor.getSession().getValue()};var get_path=this.get_path=function(){var active_file=$(".ktabs .kfiletab.active",$(element));if(active_file.length>0){var filename=active_file.attr("data-path");return filename}return""};var get_filename=this.get_filename=function(){var active_file=$(".ktabs .kfiletab.active",$(element));if(active_file.length>0){var filename=active_file.attr("data-filename");return filename}return};var configure_ide=function(filename,uisettings,loadDefaultText){$(element).addClass("hidden");var ext=filename.toLowerCase().split(".");if(ext.length>1)ext=ext[1];editor=ace.edit(id);editor.setTheme("ace/theme/chrome");editor.setShowPrintMargin(false);if(uisettings==="reactjs"){react_settings(editor,loadDefaultText)}else if(uisettings==="makefile"||ext==="makefile"){makefile_settings(editor,loadDefaultText)}else if(uisettings==="markdown"||ext==="md"){makedown_settings(editor,loadDefaultText)}else if(uisettings==="dockerfile"||ext==="dockerfile"){dockerfile_settings(editor,loadDefaultText)}else if(uisettings==="dockercompose"){dockercompose_settings(editor,loadDefaultText)}else if(uisettings==="yaml"||ext==="yaml"||ext==="yml"){yaml_settings(editor,loadDefaultText)}else if(uisettings==="csharp"||ext==="cs"||ext==="cake"||ext==="csx"){csharp_settings(editor,loadDefaultText)}else if(uisettings==="javascript"||ext==="js"){javascript_settings(editor,loadDefaultText)}else if(uisettings==="golang"||ext==="go"){golang_settings(editor,loadDefaultText)}else if(uisettings==="java"||ext==="java"){java_settings(editor,loadDefaultText)}else if(uisettings==="xml"||ext==="xml"){xml_settings(editor)}else if(uisettings==="python"||ext==="py"){python_settings(editor)}else if(uisettings==="kotlin"||ext==="kt"){kotlin_settings(editor)}else if(uisettings==="bash"||uisettings==="shell"||ext==="sh"){bash_settings(editor)}else{generic_settings(editor,loadDefaultText)}editor.clearSelection();editor.$blockScrolling=Infinity;new_line=editor.getSession().doc.getNewLineCharacter();$(element).removeClass("hidden")};var makefile_settings=function(editor,loadDefaultText){update_settings("makefile","# This is your Editor pane. Write the Makefile here and \n# use the command line to execute commands\n",4,loadDefaultText)};var makedown_settings=function(editor){update_settings("markdown","",2,false)};var dockerfile_settings=function(editor,loadDefaultText){update_settings("dockerfile","# This is your Editor pane. Write the Dockerfile here and \n# use the command line to execute commands\n",4,loadDefaultText)};var yaml_settings=function(editor,loadDefaultText){update_settings("yaml","# This is your Editor pane.\n",4,loadDefaultText)};var dockercompose_settings=function(editor,loadDefaultText){update_settings("yaml","# This is your Editor pane. Write the docker-compose.yml file here and \n# use the command line to execute commands\n",4,loadDefaultText)};var react_settings=function(editor,loadDefaultText){update_settings("jsx","// This is your IDE pane. Write the code here and \n// have the results displayed in the next pane\n",2,loadDefaultText)};var csharp_settings=function(editor,loadDefaultText){update_settings("csharp","# This is your Editor pane. Write your C# here and \n# use the command line to execute commands\n",4,loadDefaultText)};var javascript_settings=function(editor,loadDefaultText){update_settings("javascript","// This is your Editor pane. Write your JavaScript here and \n// use the command line to execute commands\n",2,loadDefaultText)};var golang_settings=function(editor,loadDefaultText){update_settings("golang","// This is your Editor pane. Write your Go here and \n// use the command line to execute commands\n",2,loadDefaultText)};var java_settings=function(editor,loadDefaultText){update_settings("java","// This is your Editor pane. Write your Java here and \n// use the command line to execute commands\n",2,loadDefaultText)};var kotlin_settings=function(editor,loadDefaultText){update_settings("kotlin","// This is your Editor pane. Write your Kotlin here and \n// use the command line to execute commands\n",2,loadDefaultText)};var xml_settings=function(editor,loadDefaultText){update_settings("xml","",2,false)};var python_settings=function(editor,loadDefaultText){update_settings("python","",4,false)};var bash_settings=function(editor,loadDefaultText){update_settings("sh","",2,false)};var generic_settings=function(editor,loadDefaultText){update_settings("text","",2)};var update_settings=function(type,text,tab,loadDefaultText){editor.getSession().setMode("ace/mode/"+type);editor.getSession().setTabSize(tab);if(loadDefaultText===false)return;var file=getParameterByName("file");if(file===""){set_code(text,false)}};var hook_up_events=function(filename){document.addEventListener(UPDATE_EDITOR_TEXT,function(e){updateEditor(e,filename)});editor.on("input",schedule_execute);editor.on("paste",function(){execute()})};var updateEditor=function(e,filename){if(e.detail.filename&&e.detail.filename.indexOf(filename)>=0){var target=e.detail.target;var code=e.detail.text;var currentValue=get_code();if(target==="append"){editor.setValue(currentValue+"\n"+code);gotoAndHighlightSection(editor,occurrences(currentValue,"\n")+1,occurrences(code,"\n")+1)}else if(target==="prepend"){editor.setValue(code+"\n"+currentValue);gotoAndHighlightSection(editor,0,occurrences(code,"\n")+1)}else if(target==="insert"){if(currentValue.indexOf(e.detail.marker)===-1){alert("Replacement value ("+e.detail.marker+") not found");return}var lines=currentValue.split("\n");var replacedLine=0;for(var i=0;i<lines.length;i++){if(lines[i].indexOf(e.detail.marker)>=0){replacedLine=i+1}}var linesAdded=code.split("\n").length;var templated=currentValue.replace(e.detail.marker,code);editor.setValue(templated);gotoAndHighlightSection(editor,replacedLine,templated,linesAdded)}else editor.setValue(code);editor.clearSelection()}};function occurrences(string,subString,allowOverlapping){string+="";subString+="";if(subString.length<=0)return string.length+1;var n=0,pos=0,step=allowOverlapping?1:subString.length;while(true){pos=string.indexOf(subString,pos);if(pos>=0){++n;pos+=step}else break}return n}function gotoAndHighlightSection(editor,goToLine,linesToHighlight){var markers=editor.session.getMarkers();for(var i=0;i<markers.length;i++){var element=markers[i];editor.session.removeMarker(element)}editor.scrollToLine(goToLine,true,true,function(){});editor.gotoLine(goToLine,10,true);var Range=ace.require("ace/range").Range;var marker=editor.session.addMarker(new Range(goToLine,0,goToLine+linesToHighlight-1,0),"linemarker","line");setTimeout(function(){editor.session.removeMarker(marker)},5e3)}var schedule_execute=function(){if(scheduled_execute){clearTimeout(scheduled_execute)}var code=get_code();var filename=get_filename();var path=get_path();if(code.match(/\n$/)===null){scheduled_execute=setTimeout(function(){execute(path,filename,code)},backoff_execute_delay)}else{execute(path,filename,code)}};var clear_console_event=new CustomEvent("clear-console-event",{});var execute=function(path,file,code){var code=code||get_code();var filename=file||get_filename();var path=path||get_path();if(filename==="")return;document.dispatchEvent(clear_console_event);var event=new CustomEvent("code-changed-event",{detail:{path:path,filename:filename,code:code}});document.dispatchEvent(event)};var loadReferencedDocument=function(){var file=getParameterByName("file");if(file==="")return;$.ajax({url:file,type:"GET",success:function(data){mixpanel.track("load-external-file",{distinct_id:app.user.email,_Course:window.course.course.pathwayId,_CourseId:window.course.course.id,_Url:file});set_code(data)}})}};